If you have not yet done so, edit get_news.py to set the directory variable on
line 26 correctly!

This directory contains cron jobs for pulling data from elsewhere. We want to
respond to the actual voice commands quickly, so we can't wait to download stuff
from the Internet before replying. Instead, we download it ahead of time and
then we can quickly read it back when prompted later.

The news_articles/ directory is somewhat like a cache of local articles: it is
written to by these cron jobs, and read from in the main computerbox program.

If you're not on a Mac and can't use launchd and the included .plist files, you
probably want a cron job that deletes old files from the news_articles/
directory. Here's a function to do that for you:
    find /path/to/files* -mtime +7 -exec rm {} \;
The 7 takes out anything over a week old. Note the spaces after rm and {}

Files in this directory:
- get_news.py downloads the RSS feeds from Google News for Science, US, and
  World News, and then downloads the corresponding articles, processes them into
  a text-only version, and stores them in the news_articles directory. It also
  makes "table of contents" files in that directory, called sci.txt, us.txt,
  world.txt, and all.txt that map the names of articles and publications to the
  files in which they're stored.
- article_to_text.py is a way of taking the HTML of an article from a website
  and extracting the text from it. It's very ad hoc, and uses the readability
  and BeautifulSoup modules for a lot of the heavy lifting. This is probably one
  of the easiest parts of the whole system to improve, and the most likely part
  to have overlooked edge cases.
- news_cron.plist is a launchd configuration file to get a Mac to treat
  get_news.py like a cron job. You need to run the following command:
    launchctl load news_cron.plist
  to get launchd to start cron'ing get_news.py, which will then automatically
  download news stories to the news_articles/ directory every few hours.
