If you haven't done this already, edit configuration.py!

To make sure everything is working, try running demo_test.py and saying stuff
like "ONE STOP" and "TWO END" to it. When you're done, hit control-C.

The data directory stores dictionaries and finite state machines (called finite
state grammars) for PocketSphinx.

The gen directory stores programs that generate the finite state grammars stored
in the data directory.

Individual files:
- demo_test.py is a way to check if gstreamer and PocketSphinx are set up
  correctly. It's also a way of trying out any new sets of commands you put
  in the data directory.
- command_dispatcher.py is the heart of the system. This is the part that
  listens for the phrase "oh computer box" and then listens for and responds to
  a subsequent command.
- speaker.py is a library for TTS stuff. It relies on pyttsx being installed,
  and by default has a Mac-specific implementation of Acknowledge(), though it
  comes with a generic one that you can use as well with a minor modification.
- listener.py is a class for creating gstreamer/PocketSphinx pipelines. It's how
  to get commands recognized.
- read_news.py reads the headlines previously downloaded by news_getter.py in
  the cron_jobs/ directory, and reads them. If you tell it to, it will then read
  the corresponding article aloud.
- speak_time.py does what the title says: it speaks the time, rounded to the
  nearest 5 minutes and made more human-understandable, a la the fuzzy clock in
  KDE.
